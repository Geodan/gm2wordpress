{"version":3,"sources":["NamespaceConfig2Ol.js","DefaultConfigurationOptions.js","LayerFactory.js","Configuration.js","ControlNames.js","tools/IsochroneTool.js","controls/Isochrone.js","Control.js","Map.js","gdmap-config2ol.js"],"names":["define","G","config2ol","tools","version","$","INSTANCE","InternalClass","core","Class","extend","options","projection","units","resolutions","extent","center","x","y","zoom","initialize","Object","defineProperty","this","get","override","DefaultConfigurationOptions","OpenLayers","LAYERTYPES","OGC_WMS","OGC_WMTS","OGC_TMS","GEOJSON","TOPOJSON","OGC_WFS","EMPTY","create","uid","layerConfig","layer","source","type","toUpperCase","_createWMTSLayer","_createWMSLayer","_createTMSLayer","_createGeojsonLayer","_createTopojsonLayer","_createWFSLayer","createEmptyLayer","console","log","id","config","Layer","WMTS","name","title","url","_constructWmtsUrl","featureName","matrixSet","matrixset","matrixIds","matrixids","format","contenttype","isBaseLayer","transitionEffect","transitioneffect","opacity","transparent","visibility","visible","style","requestEncoding","requestencoding","dimensions","params","WMS","layers","exceptions","buffer","_addSldParam","TMS","layername","split","refreshRate","strategies","Strategy","Fixed","s","Refresh","interval","push","Vector","protocol","Protocol","HTTP","Format","GeoJSON","BBOX","styleMap","StyleMap","WFS","featureType","featureNS","srsName","geometryName","formatExtension","resturl","styleConfig","sld","Util","LayerFactory","Configuration","_mapConfig","_data","_layers","_loadPromise","json","set","value","map","extension_uri","groups","view","length","visibleExtent","centerCoords","grep","baseLayers","controls","control","active","undefined","tool","setExtensionUri","customExtensionUri","indexOf","load","baseurl","account","serviceName","configName","Deferred","configManager","ConfigManager","converterOptions","configOptions","context","getConfigData","then","_loadResolved","_loadRejected","data","resolve","reject","ControlNames","scalebar","measuretool","isochronetool","coordinaten","IsochroneTool","serviceUrl","_serviceUrl","_requestManager","RequestManager","calculateIsochrone","srs","fromTo","calcSize","calcMode","urlParams","_createUrlParams","encodeURI","Control","Isochrone","prototype","apply","handlerOptions","single","double","pixelTolerance","stopSingle","stopDouble","handler","Handler","Click","click","onClick","_tool","evt","lonlat","getLonLatFromPixel","xy","clickpointVector","Feature","Geometry","Point","lon","lat","destroyFeatures","addFeatures","events","triggerEvent","object","self","done","status","jqxhr","read","geojson","fail","error","CLASS_NAME","_name","_control","measureElement","divMeasure","document","getElementById","createElement","setAttribute","ScaleLine","bottomOutUnits","geodesic","handleMeasurements","event","geometry","order","measure","element","out","toFixed","innerHTML","sketchSymbolizers","pointRadius","graphicName","fillColor","fillOpacity","strokeWidth","strokeOpacity","strokeColor","Line","strokeDashstyle","Polygon","Style","addRules","Rule","symbolizer","default","renderer","getParameters","window","location","href","renderers","Measure","Path","persist","layerOptions","on","measurepartial","MousePosition","prefix","separator","numDigits","emptyString","Map","_elementId","_configuration","_map","_controls","_initPromise","elementId","setCenter","LonLat","getCenterX","getCenterY","getZoomlevel","createMapFromConfiguration","_createMap","resolveWith","_destroyMap","rejectWith","createMapFromJSON","removeLayers","layerNames","i","getLayersByName","j","_removeLayer","addLayers","setBaseLayer","visibleBaseLayers","pos","splice","removeLayer","_parseLayers","overlays","addLayer","_setNumZoomLevels","numZoomLevels","div","theme","maxExtent","restrictedExtent","scaleBar","addControl","measureTool","destroy"],"mappings":"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":"gdmap-config2ol.min.js","sourcesContent":["/**\n * Created by robm on 15-7-2014.\n */\n\ndefine('NamespaceConfig2Ol',['gdmap-core'], function (G) {\n\t'use strict';\n\n\tG.config2ol = {};\n\tG.config2ol.tools = {};\n\tG.config2ol.version = '0.0.18-4';\n\n\treturn G;\n});\n","define('DefaultConfigurationOptions',[\n\t\t'NamespaceConfig2Ol', 'jquery'\n\t],\n\tfunction (G, $) {\n\t\t'use strict';\n\n\t\tvar INSTANCE = null;\n\t\tvar InternalClass = G.core.Class.extend({\n\t\t\toptions: {\n\t\t\t\tprojection: 'EPSG:28992',\n\t\t\t\tunits: 'm',\n\t\t\t\tresolutions: [\n\t\t\t\t\t3440.64,\n\t\t\t\t\t1720.32,\n\t\t\t\t\t860.16,\n\t\t\t\t\t430.08,\n\t\t\t\t\t215.04,\n\t\t\t\t\t107.52,\n\t\t\t\t\t53.76,\n\t\t\t\t\t26.88,\n\t\t\t\t\t13.44,\n\t\t\t\t\t6.72,\n\t\t\t\t\t3.36,\n\t\t\t\t\t1.68,\n\t\t\t\t\t0.84,\n\t\t\t\t\t0.42,\n\t\t\t\t\t0.21\n\t\t\t\t],\n\t\t\t\t//left, bottom, right, top\n\t\t\t\textent: [\n\t\t\t\t\t-285401.920000,\n\t\t\t\t\t22598.080000,\n\t\t\t\t\t595401.920000,\n\t\t\t\t\t903401.920000\n\t\t\t\t],\n\t\t\t\tcenter: {\n\t\t\t\t\tx: 155000.0,\n\t\t\t\t\ty: 456000.0\n\t\t\t\t},\n\t\t\t\tzoom: 3\n\t\t\t},\n\t\t\tinitialize: function () {\n\t\t\t\t//Define properties\n\t\t\t\tObject.defineProperty(this, 'projection', {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn this.options.projection;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tObject.defineProperty(this, 'units', {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn this.options.units;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tObject.defineProperty(this, 'resolutions', {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn this.options.resolutions;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tObject.defineProperty(this, 'extent', {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn this.options.extent;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tObject.defineProperty(this, 'center', {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn this.options.center;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tObject.defineProperty(this, 'zoom', {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn this.options.zoom;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t// possibility to override default options\n\t\t\toverride: function(options) {\n\t\t\t\t$.extend(this.options, options);\n\t\t\t}\n\t\t});\n\n\t\t//Create a singleton object\n\t\tG.config2ol.DefaultConfigurationOptions = (function () {\n\t\t\tif (INSTANCE === null) {\n\t\t\t\tINSTANCE = new InternalClass();\n\t\t\t}\n\t\t\treturn INSTANCE;\n\t\t})();\n\n\t\treturn G;\n\t});\n","define('LayerFactory',['NamespaceConfig2Ol', 'openlayers'],\n\tfunction (G, OpenLayers) {\n\t\t'use strict';\n\n\t\tvar INSTANCE = null;\n\t\tvar InternalClass = G.core.Class.extend({\n\n\t\t\t/**\n\t\t\t * Constructor of the LayerFactory object.\n\t\t\t * Initialises the known layer types.\n\t\t\t * Known layer types are:\n\t\t\t * OGC WMS\n\t\t\t * OGC WMTS\n\t\t\t * OGC TMS\n\t\t\t * OGC WFS\n\t\t\t * GeoJSON\n\t\t\t * TopoJSON\n\t\t\t * Empty baselayer\n\t\t\t */\n\t\t\tinitialize: function () {\n\t\t\t\tthis.LAYERTYPES = {\n\t\t\t\t\tOGC_WMS: 'OGC_WMS',\n\t\t\t\t\tOGC_WMTS: 'OGC_WMTS',\n\t\t\t\t\tOGC_TMS: 'OGC_TMS',\n\t\t\t\t\tGEOJSON: 'GEOJSON',\n\t\t\t\t\tTOPOJSON: 'TOPOJSON',\n\t\t\t\t\tOGC_WFS: 'OGC_WFS',\n\t\t\t\t\tEMPTY: 'EMPTY'\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Create an OpenLayers layer\n\t\t\t * @param uid User id of a layer served by Geoserver.nl\n\t\t\t * @param layerConfig Layer configuration part\n\t\t\t * @returns {OpenLayers layer object}\n\t\t\t */\n\t\t\tcreate: function (uid, layerConfig) {\n\t\t\t\tvar layer = null;\n\t\t\t\tif (layerConfig.source && layerConfig.source.type) {\n\t\t\t\t\tswitch (layerConfig.source.type.toUpperCase()) {\n\t\t\t\t\t\tcase this.LAYERTYPES.OGC_WMTS:\n\t\t\t\t\t\t\tlayer = this._createWMTSLayer(uid, layerConfig);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase this.LAYERTYPES.OGC_WMS:\n\t\t\t\t\t\t\tlayer = this._createWMSLayer(uid, layerConfig);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase this.LAYERTYPES.OGC_TMS:\n\t\t\t\t\t\t\tlayer = this._createTMSLayer(uid, layerConfig);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase this.LAYERTYPES.GEOJSON:\n\t\t\t\t\t\t\tlayer = this._createGeojsonLayer(layerConfig);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase this.LAYERTYPES.TOPOJSON:\n\t\t\t\t\t\t\tlayer = this._createTopojsonLayer(layerConfig);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase this.LAYERTYPES.OGC_WFS:\n\t\t\t\t\t\t\tlayer = this._createWFSLayer(layerConfig);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase this.LAYERTYPES.EMPTY:\n\t\t\t\t\t\t\tlayer = this.createEmptyLayer(layerConfig);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.log('Map type: \"' + layerConfig.source.type + '\" is not supported.');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('Layer source is not correctly defined');\n\t\t\t\t}\n\t\t\t\tif (layer) {\n\t\t\t\t\tlayer.id = layerConfig.id;\n\t\t\t\t}\n\t\t\t\treturn layer;\n\t\t\t},\n\n\t\t\t_createWMTSLayer: function (uid, config) {\n\t\t\t\treturn new OpenLayers.Layer.WMTS({\n\t\t\t\t\tname: config.title,\n\t\t\t\t\turl: this._constructWmtsUrl(config),\n\t\t\t\t\tlayer: config.source.featureName,\n\t\t\t\t\tmatrixSet: config.source.matrixset,\n\t\t\t\t\tmatrixIds: config.source.matrixids,\n\t\t\t\t\tformat: config.source.contenttype,\n\t\t\t\t\tisBaseLayer: config.isBaseLayer,\n\t\t\t\t\ttransitionEffect: config.source.transitioneffect || 'resize',\n\t\t\t\t\topacity: config.options.opacity,\n\t\t\t\t\ttransparent: config.options.transparent,\n\t\t\t\t\tvisibility: config.options.visible,\n\t\t\t\t\tstyle: config.source.style || 'default',\n\t\t\t\t\trequestEncoding: config.source.requestencoding || 'REST',\n\t\t\t\t\tdimensions: ['uid'],\n\t\t\t\t\tparams: {uid: uid || ''}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t_createWMSLayer: function (uid, config) {\n\t\t\t\tvar layer = new OpenLayers.Layer.WMS(\n\t\t\t\t\tconfig.title,\n\t\t\t\t\tconfig.source.url,\n\t\t\t\t\t{\n\t\t\t\t\t\tlayers: config.source.featureName,\n\t\t\t\t\t\tformat: config.source.contenttype,\n\t\t\t\t\t\texceptions: 'application/vnd.ogc.se_inimage',\n\t\t\t\t\t\ttransparent: config.options.transparent,\n\t\t\t\t\t\tversion: config.source.version,\n\t\t\t\t\t\tuid: uid || ''\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\topacity: config.options.opacity,\n\t\t\t\t\t\tbuffer: 1,\n\t\t\t\t\t\tisBaseLayer: config.isBaseLayer,\n\t\t\t\t\t\tvisibility: config.options.visible\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tthis._addSldParam(layer, config.style);\n\t\t\t\treturn layer;\n\t\t\t},\n\n\t\t\t_createTMSLayer: function (uid, config) {\n\t\t\t\treturn new OpenLayers.Layer.TMS(\n\t\t\t\t\tconfig.title,\n\t\t\t\t\tconfig.source.url,\n\t\t\t\t\t{\n\t\t\t\t\t\tlayername: config.source.featureName,\n\t\t\t\t\t\ttype: config.source.contenttype.split('/', 2)[1] + '?uid=' + uid || '',\n\t\t\t\t\t\tisBaseLayer: config.isBaseLayer,\n\t\t\t\t\t\topacity: config.options.opacity,\n\t\t\t\t\t\ttransparent: config.options.transparent,\n\t\t\t\t\t\tvisibility: config.options.visible\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t},\n\n\t\t\t_createGeojsonLayer: function (config) {\n\t\t\t\tvar refreshRate = config.options.refreshRate * 1000;\n\t\t\t\tvar strategies = [new OpenLayers.Strategy.Fixed()];\n\t\t\t\tif (refreshRate > 0) {\n\t\t\t\t\tvar s = new OpenLayers.Strategy.Refresh({interval: refreshRate});\n\t\t\t\t\tstrategies.push(s);\n\t\t\t\t}\n\t\t\t\treturn new OpenLayers.Layer.Vector(\n\t\t\t\t\tconfig.title,\n\t\t\t\t\t{\n\t\t\t\t\t\tstrategies: strategies,\n\t\t\t\t\t\tprotocol: new OpenLayers.Protocol.HTTP({\n\t\t\t\t\t\t\turl: config.source.url,\n\t\t\t\t\t\t\tformat: new OpenLayers.Format.GeoJSON()\n\t\t\t\t\t\t}),\n\t\t\t\t\t\topacity: config.options.opacity,\n\t\t\t\t\t\tvisibility: config.options.visible\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t},\n\n\t\t\t_createTopojsonLayer: function (config) {\n\t\t\t\treturn null;\n\t\t\t},\n\n\t\t\t_createWFSLayer: function (config) {\n\t\t\t\tvar refreshRate = config.options.refreshRate * 1000;\n\t\t\t\tvar strategies = [new OpenLayers.Strategy.BBOX()];\n\t\t\t\tif (refreshRate > 0) {\n\t\t\t\t\tvar s = new OpenLayers.Strategy.Refresh({interval: refreshRate});\n\t\t\t\t\tstrategies.push(s);\n\t\t\t\t}\n\t\t\t\treturn new OpenLayers.Layer.Vector(\n\t\t\t\t\tconfig.title,\n\t\t\t\t\t{\n\t\t\t\t\t\tstrategies: strategies,\n\t\t\t\t\t\tstyleMap: new OpenLayers.StyleMap(config.options.style),\n\t\t\t\t\t\tprotocol: new OpenLayers.Protocol.WFS({\n\t\t\t\t\t\t\turl: config.source.url,\n\t\t\t\t\t\t\tversion: config.source.version,\n\t\t\t\t\t\t\tfeatureType: config.source.featureName,\n\t\t\t\t\t\t\tfeatureNS: config.source.featureNS,\n\t\t\t\t\t\t\tsrsName: config.source.srsName,\n\t\t\t\t\t\t\tgeometryName: config.source.geometryName\n\t\t\t\t\t\t}),\n\t\t\t\t\t\topacity: config.options.opacity,\n\t\t\t\t\t\tvisibility: config.options.visible\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t},\n\n\t\t\t_constructWmtsUrl: function (layerConfig) {\n\t\t\t\tvar requestEncoding = layerConfig.source.requestencoding || 'REST';\n\t\t\t\tvar url = layerConfig.source.url;\n\t\t\t\tif (requestEncoding.toUpperCase() === 'REST') {\n\t\t\t\t\tvar formatExtension = layerConfig.source.contenttype.split('/', 2)[1];\n\t\t\t\t\turl = (layerConfig.source.resturl || url + '/' + layerConfig.source.featureName + '/{TileMatrixSet}/{TileMatrix}/{TileCol}/{TileRow}' + '.' + formatExtension) + '?{uid}';\n\t\t\t\t}\n\t\t\t\treturn url;\n\t\t\t},\n\n\t\t\t_addSldParam: function (layer, styleConfig) {\n\t\t\t\tif (styleConfig && styleConfig.url) {\n\t\t\t\t\tvar sld = {sld:styleConfig.url};\n\t\t\t\t\tOpenLayers.Util.extend(layer.params, sld);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates an empty OpenLayers baselayer\n\t\t\t * @param layerConfig Layer configuration part\n\t\t\t * @returns {Empty OpenLayers baselayer object}\n\t\t\t */\n\t\t\tcreateEmptyLayer: function (layerConfig) {\n\t\t\t\tlayerConfig.id = layerConfig.id || 999999;\n\t\t\t\tlayerConfig.isBaseLayer = true;\n\t\t\t\tlayerConfig.options = layerConfig.options || {};\n\t\t\t\tlayerConfig.options.opacity = 1;\n\t\t\t\tlayerConfig.options.visible = 'true';\n\t\t\t\treturn new OpenLayers.Layer(layerConfig.title, {\n\t\t\t\t\tisBaseLayer: layerConfig.isBaseLayer,\n\t\t\t\t\tvisibility: layerConfig.options.visible\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t//Create a singleton object\n\t\tG.config2ol.LayerFactory = (function () {\n\t\t\tif (INSTANCE === null) {\n\t\t\t\tINSTANCE = new InternalClass();\n\t\t\t}\n\t\t\treturn INSTANCE;\n\t\t})();\n\n\t\treturn G;\n\t});\n","define('Configuration',[\n\t\t'NamespaceConfig2Ol',\n\t\t'openlayers',\n\t\t'jquery',\n\t\t'gdmap-config',\n\t\t'DefaultConfigurationOptions',\n\t\t'LayerFactory'\n\t],\n\tfunction (G, OpenLayers, $) {\n\t\t'use strict';\n\n\t\tG.config2ol.Configuration = G.core.Class.extend({\n\t\t\t_mapConfig: null,\n\t\t\t_data: null,\n\t\t\t_layers: null,\n\t\t\t_loadPromise: null,\n\n\t\t\t/**\n\t\t\t * Constructor of the Configuration object.\n\t\t\t * @param json Cloud viewer configuration in json format (optional)\n\t\t\t * Defines the following properties:\n\t\t\t * data: configuration in raw json format\n\t\t\t * uid: user id\n\t\t\t * map: map definition\n\t\t\t * extensionUri: extensionUri for loading custom viewer content\n\t\t\t * For more info see http://lingis.geodan.nl/wiki/index.php/CloudViewer#Extensions\n\t\t\t * groups: defined layer groups\n\t\t\t * projection: defined map projection\n\t\t\t * resolutions: defined map resolutions\n\t\t\t * maxExtent: defined maximum extent\n\t\t\t * center: defined map center coordinate\n\t\t\t * zoom: defined initial zoom\n\t\t\t * layers: defined map layers\n\t\t\t * baseLayers: defined map base layers\n\t\t\t * visibleBaseLayers: defined visible map base layers\n\t\t\t * overlays: defined map base overlays\n\t\t\t * scalebar: defined scalebar\n\t\t\t *\n\t\t\t */\n\t\t\tinitialize: function (json) {\n\t\t\t\tthis._data = json || null;\n\n\t\t\t\t//Define properties\n\t\t\t\tObject.defineProperty(this, 'data', {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn this._data;\n\t\t\t\t\t},\n\t\t\t\t\tset: function (value) {\n\t\t\t\t\t\tthis._data = value;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tObject.defineProperty(this, 'uid', {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn this._data.uid;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tObject.defineProperty(this, 'map', {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn this._data.map;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tObject.defineProperty(this, 'extensionUri', {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\t//jscs:disable requireCamelCaseOrUpperCaseIdentifiers\n\t\t\t\t\t\treturn this._data.extension_uri;\n\t\t\t\t\t\t//jscs:enable requireCamelCaseOrUpperCaseIdentifiers\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tObject.defineProperty(this, 'groups', {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn this._data.groups;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tObject.defineProperty(this, 'projection', {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn this._data.map.view.projection || G.config2ol.DefaultConfigurationOptions.projection;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tObject.defineProperty(this, 'resolutions', {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\tvar resolutions = null;\n\t\t\t\t\t\tif (this._data.map.view.resolutions && this._data.map.view.resolutions.length > 0) {\n\t\t\t\t\t\t\tresolutions = this._data.map.view.resolutions;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn resolutions;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tObject.defineProperty(this, 'maxExtent', {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\tvar extent = G.config2ol.DefaultConfigurationOptions.extent;\n\t\t\t\t\t\tif (this._data.map.view.extent && this._data.map.view.extent.length === 4) {\n\t\t\t\t\t\t\textent = this._data.map.view.extent;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn extent;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tObject.defineProperty(this, 'visibleExtent', {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\tvar extent = null;\n\t\t\t\t\t\tif (this._data.map.view.visibleExtent && this._data.map.view.visibleExtent.length === 4) {\n\t\t\t\t\t\t\textent = this._data.map.view.visibleExtent;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn extent;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tObject.defineProperty(this, 'center', {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\tvar centerCoords = G.config2ol.DefaultConfigurationOptions.center;\n\t\t\t\t\t\tif (this._data.map.view.center && this._data.map.view.center.x && this._data.map.view.center.y) {\n\t\t\t\t\t\t\tcenterCoords = this._data.map.view.center;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn centerCoords;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tObject.defineProperty(this, 'zoom', {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn ((typeof this._data.map.view.zoom === 'number') && this._data.map.view.zoom >= 0) ? this._data.map.view.zoom : G.config2ol.DefaultConfigurationOptions.zoom;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tObject.defineProperty(this, 'layers', {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn this._data.map.layers;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tObject.defineProperty(this, 'baseLayers', {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn $.grep(this._data.map.layers, function (layer) {\n\t\t\t\t\t\t\treturn layer.isBaseLayer;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tObject.defineProperty(this, 'visibleBaseLayers', {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn $.grep(this.baseLayers, function (layer) {\n\t\t\t\t\t\t\treturn layer.options.visible;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tObject.defineProperty(this, 'overlays', {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn $.grep(this._data.map.layers, function (layer) {\n\t\t\t\t\t\t\treturn !layer.isBaseLayer;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tObject.defineProperty(this, 'scalebar', {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn $.grep(this._data.map.controls, function (control) {\n\t\t\t\t\t\t\treturn (control.name === 'scalebar' && (control.active === true || control.active === undefined));\n\t\t\t\t\t\t}).length === 1;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tObject.defineProperty(this, 'measuretool', {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\tvar tool =  $.grep(this._data.map.controls, function (control) {\n\t\t\t\t\t\t\t\treturn control.name === 'measuretool';\n\t\t\t\t\t\t\t}).length === 1;\n\t\t\t\t\t\treturn tool;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tObject.defineProperty(this, 'coordinaten', {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\tvar tool =  $.grep(this._data.map.controls, function (control) {\n\t\t\t\t\t\t\t\treturn (control.name === 'coordinaten' && (control.active === true || control.active === undefined));\n\t\t\t\t\t\t\t}).length === 1;\n\t\t\t\t\t\treturn tool;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the ExtensionUri\n\t\t\t * For more info see http://lingis.geodan.nl/wiki/index.php/CloudViewer#Extensions\n\t\t\t * @param customExtensionUri the Extension uri to use\n\t\t\t */\n\t\t\tsetExtensionUri: function(customExtensionUri) {\n\t\t\t\t//jscs:disable requireCamelCaseOrUpperCaseIdentifiers\n\t\t\t\tif (this._data.extension_uri) {\n\t\t\t\t\tif (this._data.extension_uri.indexOf('http') !== 0) {\n\t\t\t\t\t\tthis._data.extension_uri = customExtensionUri + this._data.extension_uri;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//jscs:enable requireCamelCaseOrUpperCaseIdentifiers\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Load a configuration stored in the document service\n\t\t\t * More information about the json configuration can be found here: http://lingis.geodan.nl/wiki/index.php/JSONCloudViewer\n\t\t\t * More information about the document service can be found here: http://lingis.geodan.nl/wiki/index.php/Document_service\n\t\t\t *\n\t\t\t * @param baseurl The base url of the document service\n\t\t\t * @param account The organisation code to use for the document service\n\t\t\t * @param serviceName The name of the service the configuration belongs to\n\t\t\t * @param configName The name of the configuration to use\n\t\t\t * @param options Particular options for the function to execute properly:\n\t\t\t * context: the context to be used when handling the calllbacks from the promise\n\t\t\t * converterOptions: options passed on to the converterObject for example { urlRoot: \"https://ontw.geodan.nl\" } to allow the config version schema to be received from different location during development\n\t\t\t * @returns { a promise which handles loading of the specified configuration }\n\t\t\t */\n\t\t\tload: function (baseurl, account, serviceName, configName, options) {\n\t\t\t\toptions = options || {};\n\t\t\t\tthis._data = null;\n\t\t\t\tthis._loadPromise = $.Deferred();\n\t\t\t\tvar configManager = new G.config.ConfigManager(baseurl, account, serviceName, options.converterOptions);\n\t\t\t\tvar configOptions = {\n\t\t\t\t\tcontext: this\n\t\t\t\t};\n\t\t\t\tconfigManager.getConfigData(configName, '1.0.0', configOptions).then(this._loadResolved, this._loadRejected);\n\t\t\t\treturn this._loadPromise;\n\t\t\t},\n\n\t\t\t_loadResolved: function(data) {\n\t\t\t\tthis._data = data;\n\t\t\t\tthis._loadPromise.resolve();\n\t\t\t},\n\n\t\t\t_loadRejected: function() {\n\t\t\t\tconsole.log('failed to load config from document service');\n\t\t\t\tthis._loadPromise.reject();\n\t\t\t}\n\t\t});\n\n\t\treturn G;\n\t});\n\n","define('ControlNames',[\n\t\t'NamespaceConfig2Ol'\n\t],\n\tfunction (G) {\n\t\t'use strict';\n\n\t\tG.config2ol.ControlNames = {\n\t\t\tscalebar: 'ScaleBar',\n\t\t\tmeasuretool: 'MeasureTool',\n\t\t\tisochronetool: 'IsochroneTool',\n\t\t\tcoordinaten: 'Coordinaten'\n\t\t};\n\t\treturn G;\n\t});\n\n","define('tools/IsochroneTool',[\n\t\t'NamespaceConfig2Ol'\n\t],\n\tfunction (G) {\n\t\t'use strict';\n\n\t\tG.config2ol.tools.IsochroneTool = G.core.Class.extend({\n\t\t\tinitialize: function (serviceUrl) {\n\t\t\t\tthis._serviceUrl = serviceUrl;\n\t\t\t\tthis._requestManager = new G.core.RequestManager();\n\t\t\t},\n\n\t\t\tcalculateIsochrone: function (x, y, srs, fromTo, calcSize, calcMode) {\n\t\t\t\tvar urlParams = this._createUrlParams(x, y, srs, fromTo, calcSize, calcMode);\n\t\t\t\tvar url = encodeURI(this._serviceUrl + urlParams);\n\t\t\t\treturn this._requestManager.get(url);\n\t\t\t},\n\n\t\t\t_createUrlParams: function (x, y, srs, fromTo, calcSize, calcMode) {\n\t\t\t\t//Get right calculation settings\n\t\t\t\tswitch (calcMode) {\n\t\t\t\t\tcase 'distance':\n\t\t\t\t\t\tcalcSize = calcSize ? calcSize : 5; // within 5 km from location\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'cost':\n\t\t\t\t\t\tcalcSize = calcSize ? calcSize : 20; // within a distance from location that costs max 20 euros to reach\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tcalcSize = calcSize ? calcSize : 10; // within 10 minutes from location\n\t\t\t\t\t\tcalcMode = 'time';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t//Create params\n\t\t\t\tvar params = '';\n\t\t\t\tif (fromTo === 'from') {\n\t\t\t\t\tparams += 'fromcoordx=' + x + '&fromcoordy=' + y;\n\t\t\t\t} else {\n\t\t\t\t\tparams += 'tocoordx=' + x + '&tocoordy=' + y;\n\t\t\t\t}\n\n\t\t\t\tparams += '&srs=' + srs;\n\t\t\t\tparams += '&calcmode=' + calcMode;\n\t\t\t\tparams += '&calcsize=' + calcSize;\n\t\t\t\tparams += '&outputformat=json';\n\n\t\t\t\treturn params;\n\t\t\t}\n\t\t});\n\n\t\treturn G;\n\t});\n","define('controls/Isochrone',[\n\t\t'tools/IsochroneTool',\n\t\t'openlayers'\n\t],\n\tfunction (G,\n\t\t\t  OpenLayers) {\n\t\t'use strict';\n\n\t\tOpenLayers.Control.Isochrone = OpenLayers.Class(OpenLayers.Control, {\n\t\t\tlayer: null,\n\n\t\t\tinitialize: function (serviceUrl, layer, options) {\n\t\t\t\tOpenLayers.Control.prototype.initialize.apply(this, [options]);\n\t\t\t\tvar handlerOptions = {\n\t\t\t\t\tsingle: true,\n\t\t\t\t\tdouble: false,\n\t\t\t\t\tpixelTolerance: 0,\n\t\t\t\t\tstopSingle: false,\n\t\t\t\t\tstopDouble: false\n\t\t\t\t};\n\n\t\t\t\tthis.handler = new OpenLayers.Handler.Click(this, {click: this.onClick}, handlerOptions);\n\t\t\t\tthis.layer = layer;\n\n\t\t\t\tthis._tool = new G.config2ol.tools.IsochroneTool(serviceUrl);\n\t\t\t},\n\n\t\t\tonClick: function (evt) {\n\t\t\t\tvar lonlat = this.map.getLonLatFromPixel(evt.xy);\n\t\t\t\tvar clickpointVector = new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(lonlat.lon, lonlat.lat));\n\n\t\t\t\tthis.layer.destroyFeatures();\n\t\t\t\tthis.layer.addFeatures(clickpointVector);\n\n\t\t\t\tthis.events.triggerEvent('calculationStarted', {\n\t\t\t\t\tobject: this,\n\t\t\t\t\tlonlat: lonlat\n\t\t\t\t});\n\n\t\t\t\tvar self = this;\n\t\t\t\t//TODO: change 10 to input value from GUI\n\t\t\t\tthis._tool.calculateIsochrone(lonlat.lon, lonlat.lat, this.map.projection, 'from', 10, 'time')\n\t\t\t\t\t.done(function (data, status, jqxhr) {\n\t\t\t\t\t\tvar format = new OpenLayers.Format.GeoJSON();\n\t\t\t\t\t\tself.layer.addFeatures(format.read(data));\n\n\t\t\t\t\t\tself.events.triggerEvent('calculationFinished', {\n\t\t\t\t\t\t\tobject: self,\n\t\t\t\t\t\t\tgeojson: data\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function (jqxhr, status, error) {\n\t\t\t\t\t\tself.events.triggerEvent('calculationError', {\n\t\t\t\t\t\t\tobject: self,\n\t\t\t\t\t\t\terror: error\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t},\n\n\t\t\tCLASS_NAME: 'OpenLayers.Control.Isochrone'\n\t\t});\n\t});\n","define('Control',[\n\t\t'ControlNames',\n\t\t'openlayers',\n\t\t'controls/Isochrone'\n\t],\n\tfunction (G, OpenLayers) {\n\t\t'use strict';\n\n\t\tG.config2ol.Control = G.core.Class.extend({\n\t\t\t_name: null,\n\t\t\t_control: null,\n\n\t\t\tinitialize: function (name, options) {\n\n\t\t\t\t//Define properties\n\t\t\t\tObject.defineProperty(this, 'control', {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn this._control;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\toptions = options || {};\n\t\t\t\toptions.measureElement = options.measureElement || 'measure_output';\n\t\t\t\tvar divMeasure = document.getElementById(options.measureElement);\n\t\t\t\tif (divMeasure === null) {\n\t\t\t\t\tdivMeasure = document.createElement('div');\n\t\t\t\t\tdivMeasure.setAttribute('id', options.measureElement);\n\t\t\t\t}\n\n\t\t\t\tthis._name = name;\n\t\t\t\tswitch (name) {\n\t\t\t\t\tcase G.config2ol.ControlNames.scalebar:\n\t\t\t\t\t\tthis._control = new OpenLayers.Control.ScaleLine({\n\t\t\t\t\t\t\t\tbottomOutUnits: '',\n\t\t\t\t\t\t\t\tgeodesic: true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase G.config2ol.ControlNames.measuretool:\n\t\t\t\t\t\tvar handleMeasurements = function (event) {\n\t\t\t\t\t\t\tvar geometry = event.geometry;\n\t\t\t\t\t\t\tvar units = event.units;\n\t\t\t\t\t\t\tvar order = event.order;\n\t\t\t\t\t\t\tvar measure = event.measure;\n\t\t\t\t\t\t\tvar element = divMeasure;\n\t\t\t\t\t\t\tvar out = '';\n\t\t\t\t\t\t\tif (order === 1) {\n\t\t\t\t\t\t\t\tout += measure.toFixed(3) + ' ' + units;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tout += measure.toFixed(3) + ' ' + units + '<sup>2</' + 'sup>';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telement.innerHTML = out;\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// style the sketch fancy\n\t\t\t\t\t\tvar sketchSymbolizers = {\n\t\t\t\t\t\t\tPoint: {\n\t\t\t\t\t\t\t\tpointRadius: 4,\n\t\t\t\t\t\t\t\tgraphicName: 'square',\n\t\t\t\t\t\t\t\tfillColor: 'white',\n\t\t\t\t\t\t\t\tfillOpacity: 1,\n\t\t\t\t\t\t\t\tstrokeWidth: 1,\n\t\t\t\t\t\t\t\tstrokeOpacity: 1,\n\t\t\t\t\t\t\t\tstrokeColor: '#333333'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tLine: {\n\t\t\t\t\t\t\t\tstrokeWidth: 3,\n\t\t\t\t\t\t\t\tstrokeOpacity: 1,\n\t\t\t\t\t\t\t\tstrokeColor: '#666666',\n\t\t\t\t\t\t\t\tstrokeDashstyle: 'dash'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tPolygon: {\n\t\t\t\t\t\t\t\tstrokeWidth: 2,\n\t\t\t\t\t\t\t\tstrokeOpacity: 1,\n\t\t\t\t\t\t\t\tstrokeColor: '#666666',\n\t\t\t\t\t\t\t\tfillColor: 'white',\n\t\t\t\t\t\t\t\tfillOpacity: 0.3\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tvar style = new OpenLayers.Style();\n\t\t\t\t\t\tstyle.addRules([\n\t\t\t\t\t\t\tnew OpenLayers.Rule({symbolizer: sketchSymbolizers})\n\t\t\t\t\t\t]);\n\t\t\t\t\t\tvar styleMap = new OpenLayers.StyleMap({default: style});\n\n\t\t\t\t\t\t// allow testing of specific renderers via '?renderer=Canvas', etc\n\t\t\t\t\t\tvar renderer = OpenLayers.Util.getParameters(window.location.href).renderer;\n\t\t\t\t\t\trenderer = (renderer) ? [renderer] : OpenLayers.Layer.Vector.prototype.renderers;\n\n\t\t\t\t\t\tthis._control = new OpenLayers.Control.Measure(\n\t\t\t\t\t\t\tOpenLayers.Handler.Path, {\n\t\t\t\t\t\t\t\tgeodesic: true,\n\t\t\t\t\t\t\t\tpersist: true,\n\t\t\t\t\t\t\t\thandlerOptions: {\n\t\t\t\t\t\t\t\t\tlayerOptions: {\n\t\t\t\t\t\t\t\t\t\trenderers: renderer,\n\t\t\t\t\t\t\t\t\t\tstyleMap: styleMap\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\tthis._control.events.on({\n\t\t\t\t\t\t\tmeasure: handleMeasurements,\n\t\t\t\t\t\t\tmeasurepartial: handleMeasurements\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase G.config2ol.ControlNames.isochronetool:\n\t\t\t\t\t\t//TODO: get url and layer from outside the library\n\t\t\t\t\t\tvar url = '';\n\t\t\t\t\t\tvar layer = '';\n\t\t\t\t\t\tthis._control = new OpenLayers.Control.Isochrone(url, layer, options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase G.config2ol.ControlNames.coordinaten:\n\t\t\t\t\t\tthis._control = new OpenLayers.Control.MousePosition({\n\t\t\t\t\t\t\tprefix: '',\n\t\t\t\t\t\t\tseparator: ' | ',\n\t\t\t\t\t\t\tnumDigits: 0,\n\t\t\t\t\t\t\temptyString: ''\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t});\n\n\t\treturn G;\n\t});\n\n","define('Map',[\n\t\t'NamespaceConfig2Ol',\n\t\t'openlayers',\n\t\t'jquery',\n\t\t'Configuration',\n\t\t'Control'\n\t],\n\tfunction (G, OpenLayers, $) {\n\t\t'use strict';\n\n\t\tG.config2ol.Map = G.core.Class.extend({\n\t\t\t_elementId: null,\n\t\t\t_configuration: null,\n\t\t\t_map: null,\n\t\t\t_layers: null,\n\t\t\t_controls: null,\n\t\t\t_initPromise: null,\n\n\t\t\t/**\n\t\t\t * Constructor of the Map class. Defines the following properties:\n\t\t\t * configuration: property containing the configuration object\n\t\t\t * map:  property containing the OpenLayers map object\n\t\t\t * layers: property containing the OpenLayers layers\n\t\t\t * baseLayers: property containing the OpenLayers baselayers\n\t\t\t * visibleBaseLayers: property containing the visible OpenLayers baselayers\n\t\t\t * overlays: property containing the OpenLayers overlays\n\t\t\t * @param elementId HTML div element id to be used as a container for the map\n\t\t\t */\n\t\t\tinitialize: function (elementId) {\n\t\t\t\tthis._elementId = elementId;\n\t\t\t\tthis._configuration = null;\n\t\t\t\tthis._map = null;\n\t\t\t\tthis._controls = {};\n\t\t\t\tthis._initPromise = null;\n\n\t\t\t\t//Define properties\n\t\t\t\tObject.defineProperty(this, 'configuration', {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn this._configuration;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tObject.defineProperty(this, 'map', {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn this._map;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tObject.defineProperty(this, 'layers', {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn this._layers;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tObject.defineProperty(this, 'baseLayers', {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn $.grep(this._layers, function (layer) {\n\t\t\t\t\t\t\treturn layer.isBaseLayer;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tObject.defineProperty(this, 'visibleBaseLayers', {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn $.grep(this.baseLayers, function (layer) {\n\t\t\t\t\t\t\treturn layer.visibility;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tObject.defineProperty(this, 'overlays', {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn $.grep(this._layers, function (layer) {\n\t\t\t\t\t\t\treturn !layer.isBaseLayer;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t/**\n\t\t\t\t * Return the controls created by this API.\n\t\t\t\t * This property is an object where each control is placed in a property.\n\t\t\t\t * The possible names of the properties are defined in G.config2ol.ControlNames\n\t\t\t\t * For instance, to retrieve the scalebar ask for this.controls[G.config2ol.ControlNames.scalebar]\n\t\t\t\t */\n\t\t\t\tObject.defineProperty(this, 'controls', {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn this._controls;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/***\n\t\t\t * Sets the center of the map to the center coordinate defined in the configuration\n\t\t\t */\n\t\t\tsetCenter: function() {\n\t\t\t\tthis.map.setCenter(new OpenLayers.LonLat(this._configuration.getCenterX(), this._configuration.getCenterY()), this._configuration.getZoomlevel());\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates an OpenLayers map from a json configuration stored in the document service.\n\t\t\t * More information about the json configuration can be found here: http://lingis.geodan.nl/wiki/index.php/JSONCloudViewer\n\t\t\t * More information about the document service can be found here: http://lingis.geodan.nl/wiki/index.php/Document_service\n\t\t\t *\n\t\t\t * @param baseurl The base url of the document service\n\t\t\t * @param account The organisation code to use for the document service\n\t\t\t * @param serviceName The name of the service the configuration belongs to\n\t\t\t * @param configName The name of the configuration to use\n\t\t\t * @param options Particular options for the function to execute properly:\n\t\t\t * context: the context to be used when handling the calllbacks from the promise\n\t\t\t * @returns { a promise which handles creating of the OpenLayers map }\n\t\t\t */\n\t\t\tcreateMapFromConfiguration: function (baseurl, account, serviceName, configName, options) {\n\t\t\t\tvar self = this;\n\t\t\t\toptions = options || {};\n\t\t\t\tvar context = options.context || this;\n\t\t\t\tthis._initPromise = $.Deferred();\n\n\t\t\t\tthis._configuration = new G.config2ol.Configuration();\n\t\t\t\tthis._configuration.load(baseurl, account, serviceName, configName, options).then(function () {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tself._createMap(options);\n\t\t\t\t\t\tself._initPromise.resolveWith(context, [this]);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (error) {\n\t\t\t\t\t\tconsole.log('Failed to create map from configuration: ' + error);\n\t\t\t\t\t\tself._destroyMap();\n\t\t\t\t\t\tself._initPromise.rejectWith(context);\n\t\t\t\t\t}\n\t\t\t\t}, function (error) {\n\t\t\t\t\tconsole.log('Error loading the configuration: ' + error);\n\t\t\t\t\tself._initPromise.rejectWith(context);\n\t\t\t\t});\n\n\t\t\t\treturn this._initPromise;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates an OpenLayers map from a json configuration.\n\t\t\t * More information about the json configuration can be found here: http://lingis.geodan.nl/wiki/index.php/JSONCloudViewer\n\t\t\t * More information about the document service can be found here: http://lingis.geodan.nl/wiki/index.php/Document_service\n\t\t\t *\n\t\t\t * @param json Cloud viewer configuration in json format\n\t\t\t * @returns {a promise which handles loading of the specified configuration}\n\t\t\t */\n\t\t\tcreateMapFromJSON: function (json) {\n\t\t\t\tthis._configuration = new G.config2ol.Configuration(json);\n\n\t\t\t\tthis._initPromise = $.Deferred();\n\t\t\t\tthis._createMap({});\n\t\t\t\tthis._initPromise.resolve(this);\n\t\t\t\treturn this._initPromise;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Removes layers from the map. When there's not a single base layer present any longer,\n\t\t\t * a new empty base layer will be added.\n\t\t\t * @param layerNames An array containing names of layers to remove\n\t\t\t */\n\t\t\tremoveLayers: function(layerNames) {\n\t\t\t\tfor (var i = 0; i < layerNames.length; i++) {\n\t\t\t\t\tvar layers = this._map.getLayersByName(layerNames[i]);\n\t\t\t\t\tfor (var j = 0; j < layers.length; j++) {\n\t\t\t\t\t\tthis._removeLayer(layers[j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.baseLayers.length === 0) {\n\t\t\t\t\tvar layer = G.config2ol.LayerFactory.createEmptyLayer({title:'empty'});\n\t\t\t\t\tthis._layers.push(layer);\n\t\t\t\t\tthis._map.addLayers(this.baseLayers);\n\t\t\t\t\tthis._map.setBaseLayer(this.visibleBaseLayers[0]);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t_removeLayer: function(layer) {\n\t\t\t\tvar pos = this._layers.indexOf(layer);\n\t\t\t\tif (pos >= 0) {\n\t\t\t\t\tthis._layers.splice(pos, 1);\n\t\t\t\t\tthis._map.removeLayer(layer, false);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t_parseLayers: function () {\n\t\t\t\tvar layer;\n\t\t\t\tthis._layers = [];\n\t\t\t\tvar data = this._configuration.data;\n\t\t\t\tfor (var i = 0; i < data.map.layers.length; ++i) {\n\t\t\t\t\tlayer = G.config2ol.LayerFactory.create(data.uid, data.map.layers[i]);\n\t\t\t\t\tif (layer !== null) {\n\t\t\t\t\t\tthis._layers.push(layer);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.baseLayers.length === 0) {\n\t\t\t\t\tlayer = G.config2ol.LayerFactory.createEmptyLayer({title:'empty'});\n\t\t\t\t\tthis._layers.push(layer);\n\t\t\t\t}\n\n\t\t\t\tthis._map.addLayers(this.overlays);\n\n\t\t\t\tvar visibleBaseLayers = this.visibleBaseLayers;\n\t\t\t\tif (visibleBaseLayers.length > 0) {\n\t\t\t\t\tthis._map.addLayer(visibleBaseLayers[0]);\n\t\t\t\t\tthis._map.setBaseLayer(visibleBaseLayers[0]);\n\t\t\t\t}\n\t\t\t\tthis._map.addLayers(this.baseLayers);\n\t\t\t},\n\n\t\t\t_setNumZoomLevels: function() {\n\t\t\t\tif (this._map.resolutions && this.map.resolutions.length > 0) {\n\t\t\t\t\tthis._map.numZoomLevels = this.map.resolutions.length;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t_createMap: function (options) {\n\t\t\t\tthis._map = new OpenLayers.Map({\n\t\t\t\t\tdiv: this._elementId,\n\t\t\t\t\ttheme: null,\n\t\t\t\t\tprojection: this._configuration.projection,\n\t\t\t\t\tresolutions: this._configuration.resolutions,\n\t\t\t\t\tmaxExtent: this._configuration.maxExtent,\n\t\t\t\t\trestrictedExtent: this._configuration.visibleExtent,\n\t\t\t\t\tcenter: this._configuration.center,\n\t\t\t\t\tzoom: this._configuration.zoom,\n\t\t\t\t\tunits: 'm'\n\t\t\t\t});\n\n\t\t\t\tthis._setNumZoomLevels();\n\n\t\t\t\tthis._parseLayers();\n\n\t\t\t\tif (this._configuration.scalebar) {\n\t\t\t\t\tvar scaleBar = new G.config2ol.Control(G.config2ol.ControlNames.scalebar);\n\t\t\t\t\tthis._map.addControl(scaleBar.control);\n\t\t\t\t\tthis._controls[G.config2ol.ControlNames.scalebar] = scaleBar;\n\t\t\t\t}\n\n\t\t\t\tif (this._configuration.measuretool) {\n\t\t\t\t\tvar measureTool = new G.config2ol.Control(G.config2ol.ControlNames.measuretool, options);\n\t\t\t\t\tthis._map.addControl(measureTool.control);\n\t\t\t\t\tthis._controls[G.config2ol.ControlNames.measuretool] = measureTool;\n\t\t\t\t}\n\n\t\t\t\tif (this._configuration.coordinaten) {\n\t\t\t\t\tvar coordinaten = new G.config2ol.Control(G.config2ol.ControlNames.coordinaten, options);\n\t\t\t\t\tthis._map.addControl(coordinaten.control);\n\t\t\t\t\tthis._controls[G.config2ol.ControlNames.coordinaten] = coordinaten;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t_destroyMap: function () {\n\t\t\t\tif (this._map !== null) {\n\t\t\t\t\tthis._map.destroy();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn G;\n\t});\n","define('gdmap-config2ol',[\n\t\t'gdmap-core',\n\t\t'Map'\n\t],\n\tfunction (G) {\n\t\t'use strict';\n\n\t\treturn G;\n\t});\n"]}